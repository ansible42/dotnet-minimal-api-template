name: Build-Test

env:
  solution: 'src/MinimialAPI.sln'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.solution }} 
    
    - name: Build
      run: dotnet build ${{ env.solution }} --no-restore
    
    - name: Test
      run: dotnet test ${{ env.solution }} -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"
    
    - uses: actions/upload-artifact@v2  # upload test results
      if: success() || failure()        # run this step even if previous step failed
      with:
          name: test-results
          path: src/MinimalAPI.Test/TestResults

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:csharp"
